# name: Deploy to Railway

# on:
#   push:
#     branches: main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v4

#       - name: Set up Python
#         uses: actions/setup-python@v4
#         with:
#           python-version: "3.9"
#           cache: 'pip'

#       - name: Install dependencies
#         working-directory: ./public
#         run: |
#           python -m pip install --upgrade pip
#           if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

#       - name: Install Railway CLI
#         run: npm install -g @railway/cli

#       - name: Deploy to Railway
#         working-directory: ./public
#         run: railway up --detach --service comp7940
#         env:
#           RAILWAY_TOKEN: ${{ secrets.RAILWAY_TOKEN }}
#           RAILWAY_PROJECT_ID: ${{ secrets.RAILWAY_PROJECT_ID }}
name: Deploy to Docker Hub and Render

on:
  push:
    branches: main

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        uses: docker/build-push-action@v5
        with:
          context: ./public  # 根据 Dockerfile 位置调整
          file: ./public/Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/aa-image:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/aa-image:${{ github.sha }}

  deploy-render:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Render Deployment
        run: |
          curl -X POST \
            "https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys" \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            -d '{"clearCache": "clear"}'
